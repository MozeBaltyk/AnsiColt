# Collection Description
- name: Prompt description
  when: (collection_description is not defined) or (collection_description|length == 0)
  run_once: true
  block:
    - name: Set description to ansible collection
      ansible.builtin.pause:
        prompt: "Please give a description to your collection"
      register: prompt_description

    - name: Set your description coming from prompt
      ansible.builtin.set_fact:
        collection_description: "{{ prompt_description['user_input'] }}"

# Email Authors for collection
- name: Prompt email authors
  when: (collection_author_email is not defined) or (collection_author_email|length == 0)
  run_once: true
  block:
    - name: Give an email to ansible collection
      ansible.builtin.pause:
        prompt: "Please give an email that we can set as author of this collection (if empty, take as default from the git config global)"
      register: prompt_email

    - name: Set authors email
      ansible.builtin.set_fact:
        collection_author_email: "{{ prompt_email['user_input'] }}"
      when: prompt_email['user_input']|length != 0

    - name: Set email authors
      when: prompt_email['user_input']|length == 0
      block:
        - name: Get User.Email from git global config to define authors of the collection # noqa: command-instead-of-module
          ansible.builtin.shell: "set -o pipefail && git config --global user.email"
          args:
            executable: /bin/bash
          register: gitconfig_email
          changed_when: false

        - name: Set authors email from git config
          ansible.builtin.set_fact:
            collection_author_email: "{{ gitconfig_email['stdout'] }}"
