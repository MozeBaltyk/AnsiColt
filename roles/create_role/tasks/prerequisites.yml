# Role - Name
- name: Prompt to Role
  when: (new_role_name is not defined) or (new_role_name|length == 0)
  run_once: true
  block:
    - name: Set name to role
      ansible.builtin.pause:
        prompt: "Please give a name to your role"
      register: prompt_role_name

    - name: Set name coming from prompt
      ansible.builtin.set_fact:
        new_role_name: "{{ prompt_role_name['user_input'] }}"

# Role - Description
- name: Prompt to Description
  when: (new_role_description is not defined) or (new_role_description|length == 0)
  run_once: true
  block:
    - name: Set description to role
      ansible.builtin.pause:
        prompt: "Please give a description to your role"
      register: prompt_description

    - name: Set your description coming from prompt
      ansible.builtin.set_fact:
        new_role_description: "{{ prompt_description['user_input'] }}"

# Role - Email Authors
- name: Prompt email Authors
  when: (new_role_author_email is not defined) or (new_role_author_email|length == 0)
  run_once: true
  block:
    - name: Give an email to ansible collection
      ansible.builtin.pause:
        prompt: "Please give an email that we can set as author of this collection (if empty, take as default from the git config global)"
      register: prompt_email

    - name: Email Authors
      ansible.builtin.set_fact:
        new_role_author_email: "{{ prompt_email['user_input'] }}"
      when: prompt_email['user_input']|length != 0

    - name: Set email fact
      when: prompt_email['user_input']|length == 0
      block:
        - name: Get User.Email from git global config to define authors of the collection # noqa: command-instead-of-module
          ansible.builtin.shell: "git config --global user.email"
          register: gitconfig_email
          changed_when: false

        - name: Set authors email from git config
          ansible.builtin.set_fact:
            new_role_author_email: "{{ gitconfig_email['stdout'] }}"
